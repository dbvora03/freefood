{"version":3,"sources":["components/topbar.js","components/screens/feed.js","components/screens/profile.js","components/screens/signin.js","components/screens/signup.js","components/screens/guestfeed.js","components/screens/createpost.js","reducers/userReducer.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","useContext","usercontext","state","dispatch","history","useHistory","className","to","id","style","marginLeft","onClick","localStorage","clear","type","push","name","Home","useState","data","setData","useEffect","console","log","fetch","headers","getItem","then","res","json","result","posts","maxWidth","margin","textAlign","fontFamily","map","item","key","_id","src","photo","title","author","marginBottom","float","postid","method","Authorization","newData","filter","padding","pic","width","height","marginTop","borderRadius","display","marginRight","description","dietaryRestrict","Profile","mypics","setPics","image","setImage","mypost","FormData","append","body","JSON","stringify","url","setItem","payload","catch","err","length","action","class","onChange","e","file","target","files","window","location","reload","Signin","password","setpassword","email","setemail","value","placeholder","error","M","toast","html","token","user","Signup","setName","address","setaddress","undefined","setURL","uploadFields","test","PostData","uploadFile","GuestFeed","alignContent","CreatePost","setTitle","setBody","setAddress","setDiet","classes","reducer","createContext","Routing","parse","exact","path","App","useReducer","Provider","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.bf115132.chunk.js","sourcesContent":["import React from 'react'\nimport {Link, useHistory} from 'react-router-dom'\nimport { useContext } from 'react'\nimport {usercontext} from '../App'\nconst NavBar = ()=> {\n    const {state, dispatch} = useContext(usercontext)\n    const history = useHistory()\n    //Modifies bar based off of whether you are signed in or not\n    function renderList(){\n        if (state) {\n            return [\n                <li style={{marginLeft: \"10px\"}}>\n                    <button onClick={()=>{\n                        localStorage.clear()\n                        dispatch({type:\"CLEAR\"})\n                        history.push(\"/signin\")\n                    }} className=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\">Log out</button>\n                </li>,\n                <li><Link to=\"/profile\">Profile</Link></li>,\n                <li><Link to=\"/createpost\">Make a Posting</Link></li>\n            ]\n        } else {\n            return [\n                <button className=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\"><li><Link to=\"/guestfeed\">Guest feed</Link></li></button>,\n                <li><Link to=\"/signup\">Sign up</Link></li>,\n                <li><Link to=\"/signin\">Sign in</Link></li>\n            ]\n        }\n    }\n\n\n    return(\n        <nav>\n            <div className=\"nav-wrapper teal\">\n            <Link to={state? \"/feed\": \"/signin\"} className=\"brand-logo right\">FreeFood</Link>\n                <ul id=\"nav-mobile\" className=\"left\">\n                    {renderList()}                    \n                </ul>\n            </div>\n        </nav>\n    )\n}\n\nexport default NavBar","import React, {useState, useEffect, useContext} from 'react'\n//import { head } from '../../../../routes/auth'\nimport { usercontext } from '../../App'\n\n\n\n\nconst Home = () => {\n    const [data, setData] = useState([])\n    const {state, dispatch} = useContext(usercontext)\n\n\n    useEffect(()=> {\n        console.log(\"a\")\n        //Get request to the back end\n        fetch('/feed', {\n            headers: {\n                \"Authorization\":\"Bearer \" + localStorage.getItem(\"jwt\")\n            }\n        }).then(res=>res.json()).then(result => {\n            // Gets all of the posts needed, they are in array form, so data is an array\n            setData(result.posts)\n            console.log(\"b\")\n        })\n    },[])\n\n\n    const deletepost = (postid)=>{\n        console.log(\"c\")\n        console.log(postid)\n        //Sends delete request to back-end on a specific post. postid is a paramter\n        fetch(`/deletepost/${postid}`,{\n            method:\"delete\",\n            headers:{\n                Authorization:\"Bearer \"+localStorage.getItem(\"jwt\")\n            }\n        }).then(res=>res.json())\n        .then(result=>{\n            console.log(\"d\")\n            console.log(result)\n            //New data is filtered out to include everything except the post deleted\n            const newData = data.filter(item=>{\n                return item._id !== result._id\n            })\n            console.log(\"e\")\n            setData(newData)\n        })\n    }\n\n    return (\n        <div style={{maxWidth:\"550px\", margin:\"0px auto\"}}>\n            <h1 style={{textAlign:\"center\", fontFamily:\"revert\"}}>Todays Postings</h1>\n            <div className=\"gallery\">\n\n                {\n                    data.map(item=> {\n\n                        \n                        return(\n                            <div className=\"card\" key={item._id}>\n\n                                <div className=\"card-image waves-effect waves-block waves-light\">\n                                    <img className=\"activator\" src={item.photo}/>\n                                </div>\n                                <div className=\"card-content\">\n                                    <span className=\"card-title activator grey-text text-darken-4\">{item.title}  \n                                        <i className=\"material-icons right\">more_vert</i>\n                                    </span>\n\n                                <p>{item.author.name}</p>\n\n                                </div>\n                                <div className=\"card-reveal\">\n                                    <span className=\"card-title grey-text text-darken-4\"style={{marginBottom:\"0\"}}>{item.title}<i className=\"material-icons right\">close</i></span>\n                                    {item.author._id === state._id && <i className=\"material-icons\" style={{float:\"right\"}} onClick={()=>{deletepost(item._id)}}>delete</i>}\n                                    <div className=\"card-content\" style={{padding:\"9px\"}}>\n                                        <img src={item.author.pic} style={{width:\"80px\", height:\"80px\", marginTop:\"0px\",borderRadius:\"80px\", display: \"block\", marginLeft: \"auto\", marginRight: \"auto\"}}></img>\n                                        <h5 style={{ textAlign:\"center\"}}>{item.author.name}</h5>\n                                    </div>\n                                    <p>{item.description}</p>\n                                    <h6>Dietary Information</h6>\n                                    <p>{item.dietaryRestrict}</p>\n                                    <h6>Location</h6>\n                                    <div>\n                                        <h6>Insert map in here</h6>\n                                   \n                                    </div>\n                                </div>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n        </div>\n    )\n}\n\n\n\nexport default Home","import { useContext, useEffect, useState } from \"react\"\nimport React from 'react'\nimport {usercontext} from \"../../App\"\n\n\nconst Profile = () => {\n    const [mypics, setPics] = useState([])\n    const {state, dispatch} = useContext(usercontext)\n    const [image, setImage] = useState(\"\")\n    //const [url, setURL] = useState(\"\")\n\n    useEffect(()=>{\n        //Makes a fetch to the front end, \n        fetch(\"/profile\", {\n            headers: {\n                \"Authorization\":\"Bearer \" + localStorage.getItem(\"jwt\")\n            }\n        }).then(res=>res.json()).then(result=> {\n            console.log(result.mypost)\n            setPics(result.mypost)\n        })\n    },[])\n\n    useEffect(()=> {\n        //If picture really exists\n        if(image) {\n\n            //Formtatting photo to be sent to cloudinary\n            const data = new FormData()\n            data.append(\"file\",image)\n            data.append(\"upload_preset\",\"bongumusa\")\n            data.append(\"cloud_name\",\"dcjuakpsl\")\n            console.log(\"line 48\")\n\n            //Sends photo to cloudinary\n            fetch(\"https://api.cloudinary.com/v1_1/dcjuakpsl/image/upload\",{\n                method:\"post\",\n                body:data\n            })\n            .then(res=>res.json()) //Returned an src link for the photo, which can be used in our tags\n            .then(data=>{\n\n                //Sends photo to back end\n                fetch(\"/updatepic\", {\n                    method:\"PUT\",\n                    headers:{\n                        \"Content-Type\":\"application/json\",\n                        \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n                    },\n                    body:JSON.stringify({\n                        pic:data.url,\n                    })\n                    //Now, it returns the new user data. We dont really need all of it, just a bit of state and the new picture\n                }).then(res=> res.json()).then(result=> {\n                    console.log(result)\n                    localStorage.setItem(\"user\", JSON.stringify({...state, pic:result.pic})) //Spread is used to lay out all of state, then pic is added\n                    \n                    //updates the state using the reducer\n                    dispatch({type:\"UPDATEPIC\", payload:result.pic})\n                })\n\n                //window.location.reload()\n            })\n            .catch(err=>{\n                console.log(\"Line 58 error\", err)\n            })\n        }\n    },[image])\n    const updatePFP = (file) => {\n        setImage(file)\n    }\n\n\n    return (\n\n        \n        <div style={{maxWidth:\"550px\", margin:\"0px auto\"}}>\n            <div className=\"row\">\n                <div className=\"col s12 m5\">\n                \n\n                    <div className=\"card-panel \">\n                        <img src={state?state.pic: \"loading Profile Pic\"} style={{width:\"100px\", height:\"100px\", marginTop:\"0px\",borderRadius:\"80px\", display: \"block\", marginLeft: \"auto\", marginRight: \"auto\"}}></img>\n                        \n                        <h4 style={{textAlign:\"center\"}}>{state?state.name:\"loading\"}</h4>\n                        <p style={{textAlign:\"center\"}}> {mypics.length} open posting(s)</p>\n                        <form action=\"#\">\n                            <div class=\"file-field input-field\">\n                                <div class=\"btn\">\n                                    <span>Update Logo</span>\n                                    <input type=\"file\"/>\n                                </div>\n                                <div class=\"file-path-wrapper\">\n                                <input class=\"file-path validate\" onChange={(e)=>{\n                                    updatePFP(e.target.files[0]) \n                                    window.location.reload()\n                                    }}type=\"text\"/>\n                                </div>\n                            </div>\n                        </form>\n\n                    </div>\n                </div>\n            </div>\n\n        \n            <div className=\"gallery\">\n                {\n                    mypics.map(item=> {\n                        return (\n                            <div className=\"card\" key={item._id}>\n                                <div className=\"card-image waves-effect waves-block waves-light\">\n                                    <img className=\"activator\" src={item.photo}/>\n                                </div>\n                                <div className=\"card-content\">\n                                    <span className=\"card-title activator grey-text text-darken-4\">{item.title}  \n                                        <i className=\"material-icons right\">more_vert</i>\n                                    </span>\n                                    <p>{item.author.name}</p>\n                                </div>\n                                <div className=\"card-reveal\">\n                                    <span className=\"card-title grey-text text-darken-4\"style={{marginBottom:\"0\"}}>{item.title}<i className=\"material-icons right\">close</i></span>\n                                    <div className=\"card-content\" style={{padding:\"9px\"}}>\n                                        <img src={state?state.pic: \"loading Profile Pic\"} style={{width:\"80px\", height:\"80px\", marginTop:\"0px\",borderRadius:\"80px\", display: \"block\", marginLeft: \"auto\", marginRight: \"auto\"}}></img>\n                                        <h5 style={{ textAlign:\"center\"}}>{item.author.name}</h5>\n                                    </div>\n                                    <p>{item.description}</p>\n                                    <h6>Dietary Information</h6>\n                                    <p>{item.dietaryRestrict}</p>\n                                    <h6>Location</h6>\n                                    <div>\n                                        <h6>Insert map in here</h6>\n                                    </div>\n                                </div>\n                            </div>\n                        )\n                    })\n                }\n                \n                \n                   \n\n            </div>\n        </div>\n    )\n}\n\nexport default Profile","import React, {useState, useContext} from 'react'\nimport {Link, useHistory} from 'react-router-dom'\nimport M from 'materialize-css'\nimport {usercontext} from '../../App'\n\nconst Signin = () => {\n    const {state, dispatch} = useContext(usercontext)\n    const history = useHistory()\n    const [password,setpassword] = useState(\"\")\n    const [email,setemail] = useState(\"\")\n\n    const PostData = ()=> {\n\n        //Sends a post request to the backend\n        fetch(\"/signin\", {\n            method:\"post\",\n            headers:{\n                \"Content-Type\":\"application/json\"\n            },\n            body:JSON.stringify({\n                password,\n                email\n            })\n        }).then(res=>res.json()).then(data=>{\n            console.log(data)\n           if(data.error){\n                M.toast({html:data.error})\n            } else {\n                //Front end now makes access to the token by acquiring it from back end. \n                localStorage.setItem(\"jwt\", data.token)\n                // JSON version of the user data is now in our hands\n                localStorage.setItem(\"user\", JSON.stringify(data.user))\n\n                //We need to use a reducer to get rid of data and have just the user part of it. \n                // Then we need to make the state equivalent to the userdata in order to use it in other pages\n                dispatch({type:\"USER\", payload:data.user})\n                M.toast({html:\"Logging you in!\"})\n\n                // after signing in, it takes you to the feed\n                history.push('/feed')\n            }\n        }).catch(err=> {\n            console.log(\"Bro please\" ,err)\n        })\n    }\n    return (\n        <div className=\"mycard\">\n            <div className=\"card auth-card\">\n                <h2>Welcome to FreeFood</h2>\n                <input value={email} onChange={(e)=>setemail(e.target.value)} type=\"text\" placeholder=\"Email\"/>\n                <input value={password} onChange={(e)=>setpassword(e.target.value)} type=\"password\" placeholder=\"Password\"/>\n                <button onClick={()=> {PostData()}} className=\"btn waves-effect waves-light\" style={{margin:\"10px\"}}type=\"submit\" name=\"action\">Log in</button>\n                <h6>Are you a business that doesn't have an account?</h6>\n                <h6><Link to=\"/signup\">Sign up here!</Link></h6>\n            </div>\n        </div>\n    )\n}\n\n\n\nexport default Signin","import React, {useState, useEffect} from 'react'\nimport {Link, useHistory} from 'react-router-dom'\nimport M from 'materialize-css'\n\n\nconst Signup = () => {\n    const history = useHistory()\n    const [name,setName] = useState(\"\")\n    const [password,setpassword] = useState(\"\")\n    const [email,setemail] = useState(\"\")\n    const [address,setaddress] = useState(\"\")\n    const [pic, setImage] = useState(\"\")\n    const [url, setURL] = useState(undefined)\n\n    //Does all the submission stuff when the submission button is clicked\n    useEffect(()=> {\n        if(url) {\n            uploadFields()\n        }\n    },[url])\n\n\n\n    const uploadFile = ()=>{\n        const data = new FormData()\n        data.append(\"file\",pic)\n        data.append(\"upload_preset\",\"bongumusa\")\n        data.append(\"cloud_name\",\"dcjuakpsl\")\n        console.log(\"line 48\")\n\n        //Fetches to cloudinary, it posts the photo to the database\n        fetch(\"https://api.cloudinary.com/v1_1/dcjuakpsl/image/upload\",{\n            method:\"post\",\n            body:data\n        })\n        .then(res=>res.json())\n        .then(data=>{ //returns an image address\n           setURL(data.url)\n        })\n        .catch(err=>{\n            console.log(\"Line 58 error\", err)\n        })\n    }\n\n    const uploadFields = () => {\n        // Uses some regex to check if the email is actually a valid email or not. \n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\n            M.toast({html: \"invalid email\"})\n            return\n        }\n\n        //Sends post request to back-end\n        fetch(\"/signup\", {\n            method:\"post\",\n            headers:{\n                \"Content-Type\":\"application/json\"\n            },\n            body:JSON.stringify({\n                name,\n                password,\n                email,\n                pic:url\n            })\n        }).then(res=>res.json()).then(data=>{//Responds with status on whether it worked or not\n           if(data.error){\n                M.toast({html:data.error})\n            } else {\n                M.toast({html:\"You have been signed up! Check your email!\"})\n                //Takes you to signin right after\n                history.push('/signin')\n            }\n        }).catch(err=> {\n            console.log(err)\n        })\n    }\n\n\n    const PostData = ()=> {\n\n        if(pic) {\n            uploadFile()\n        } else {\n            uploadFields()\n        }\n\n    }\n\n\n    return (\n        <div className=\"mycard\">\n            <div className=\"card auth-card\" style={{margin:\"0\"}}>\n                <h2>Signup below!</h2>\n                <input value={name} onChange={(e)=>setName(e.target.value)} type=\"text\" placeholder=\"Company Name\"/>\n                <input value={email} onChange={(e)=>setemail(e.target.value)} type=\"text\" placeholder=\"Email\"/>\n                <input value={password} onChange={(e)=>setpassword(e.target.value)} type=\"password\" placeholder=\"Password\"/>\n                <input value={address} onChange={(e)=>setaddress(e.target.value)} type=\"text\" placeholder=\"Address\"/>\n\n                <div className=\"file-field input-field\">\n                    <div className=\"btn #64b5f6 darken-1\">\n                        <span>Upload Logo</span>\n                        <input type=\"file\" onChange={(e)=>setImage(e.target.files[0])} />\n                    </div>\n                    <div className=\"file-path-wrapper\">\n                        <input className=\"file-path validate\" type=\"text\" />\n                    </div>\n                </div>\n\n\n\n\n                <button onClick={()=>PostData()} className=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\">Sign up</button>\n                <p>An email will be sent to you on  how to use the application</p>\n\n            </div>\n        </div>\n    )\n}\n\n\n\nexport default Signup","import React, {useState, useEffect} from 'react'\n//import { head } from '../../../../routes/auth'\n\n\nconst GuestFeed = () => {\n    const [data, setData] = useState([])\n    \n    useEffect(()=>{\n        console.log(\"a\")\n        //Get request to the back end\n        fetch('/guestfeed').then(res=>res.json()).then(result => {\n            // Gets all of the posts needed, they are in array form, so data is an array\n            setData(result.posts)\n            console.log(\"b\")\n        })\n    },[])\n\n    return (\n        <div style={{maxWidth:\"550px\", margin:\"0px auto\"}}>\n            <h1 style={{alignContent:\"center\"}}>Todays Postings</h1>\n            <div className=\"gallery\">\n\n                {\n                    data.map(item=> {\n\n                        \n                        return(\n                            <div className=\"card\" key={item._id}>\n                                <div className=\"card-image waves-effect waves-block waves-light\">\n                                    <img className=\"activator\" src={item.photo}/>\n                                </div>\n                                <div className=\"card-content\">\n                                    <span className=\"card-title activator grey-text text-darken-4\">{item.title}  \n                                        <i className=\"material-icons right\">more_vert</i>\n                                    </span>\n\n                            <p>{item.author.name}</p>\n                                </div>\n                                <div className=\"card-reveal\">\n                                    <span className=\"card-title grey-text text-darken-4\">{item.title}<i className=\"material-icons right\">close</i></span>\n                                    <p>{item.description}</p>\n                                    <h6>Dietary Information</h6>\n                                    <p>{item.dietaryRestrict}</p>\n                                    <h6>Location</h6>\n                                    <div>\n                                        <h6>Insert map in here</h6>\n                                    </div>\n                                </div>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n        </div>\n    )\n}\n\n\nexport default GuestFeed","import React, {useState, useEffect} from 'react'\nimport M from 'materialize-css'\nimport {useHistory} from 'react-router-dom'\n\n// Assigned cloud name is dcjuakpsl    save for later !!!!!\n\n\nconst CreatePost = ()=> {\n    const history = useHistory()\n    const [title, setTitle] = useState(\"\");\n    const [description, setBody] = useState(\"\");\n    const [photo, setImage] = useState(\"\");\n    const [url, setURL] = useState(\"\");\n    const [address, setAddress] = useState(\"\")\n    const [dietaryRestrict, setDiet] = useState(\"\")\n\n\n    useEffect(()=>{\n        if(url){\n            console.log(\"4\")\n        //Sends all post details to the back-end\n         fetch(\"/createpost\",{\n             method:\"post\",\n             headers:{\n                 \"Content-Type\":\"application/json\",\n                 \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n             },\n             body:JSON.stringify({\n                 title,\n                 description,\n                 photo:url,\n                 address,\n                 dietaryRestrict\n             })\n         }).then(res=>res.json())\n         .then(data=>{\n            console.log(\"5\")\n            //Now we know the condition of whether the post was made ot not. \n            if(data.error){\n                console.log(\"6\")\n               M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\n            }\n            else{\n                console.log(\"7\")\n                M.toast({html:\"Created post Successfully\",classes:\"#43a047 green darken-1\"})\n                //Takes you to the feed right after\n                history.push('/feed')\n            }\n         }).catch(err=>{\n             console.log(err)\n         })\n     }\n     },[url])\n\n\n     const uploadFile = ()=>{\n\n        // Parses the data needed to send photo to cloudinary\n        const data = new FormData()\n        data.append(\"file\",photo)\n        data.append(\"upload_preset\",\"bongumusa\")\n        data.append(\"cloud_name\",\"dcjuakpsl\")\n\n        //Sends data to cloudinary\n        fetch(\"https://api.cloudinary.com/v1_1/dcjuakpsl/image/upload\",{\n            method:\"post\",\n            body:data\n        })\n        .then(res=>res.json()) \n        .then(data=>{ //gets a URL in return. This URL can be used inside the src html tag\n           setURL(data.url)\n           console.log(\"3\")\n        })\n        .catch(err=>{\n            console.log(\"Line 58 error\", err)\n        })\n    }\n \n    return(<> \n        <div class=\"row\" style={{maxWidth:\"500px\",padding:\"20px\",textAlign:\"center\"}}>\n            <div class=\"col s12 m5\">\n                <div class=\"card-panel\">\n                    <h3>Create a posting</h3>\n                </div>\n            </div>\n        </div>\n        <div className=\"card input-filed\"\n        style={{margin:\"30px auto\",maxWidth:\"500px\",padding:\"20px\",textAlign:\"center\"}}>\n\n            <input type=\"text\" placeholder=\"title\" value={title} onChange={(e)=>setTitle(e.target.value)}/>\n            <input type=\"text\" placeholder=\"description\" value={description} onChange={(e)=>setBody(e.target.value)}/>\n            <input type=\"text\" placeholder=\"address\" value={address} onChange={(e)=>setAddress(e.target.value)}/>\n            <input type=\"text\" placeholder=\"allergen information\" value={dietaryRestrict} onChange={(e)=>setDiet(e.target.value)}/>\n\n            <div className=\"file-field input-field\">\n                <div className=\"btn #64b5f6 teal darken-1\">\n                    <span>Upload Image</span>\n                    <input type=\"file\" onChange={(e)=>setImage(e.target.files[0])} />\n                </div>\n                <div className=\"file-path-wrapper\">\n                    <input className=\"file-path validate\" type=\"text\" />\n                </div>\n             </div>\n             <button className=\"btn waves-effect waves-light #64b5f6 teal darken-1\"\n             onClick={()=>uploadFile()}>\n                 Submit post\n             </button>\n \n        </div>\n        </>\n    )\n\n\n\n}\n\nexport default CreatePost","\nexport const initialState = null\n\n\nexport const reducer = (state, action) => {\n    //Protects user data from being lost when refreshed\n    if(action.type === \"USER\") {\n        //Sets the state to payload\n        return action.payload\n    }\n    //Sets state to null, meaning the user has signed out\n    if(action.type === \"CLEAR\") {\n        return null\n    }\n\n    //Changes the state of the user, picture is modified, but the rest remains the same. \n    if(action.type === \"UPDATEPIC\") {\n        return {\n            ...state,\n            pic:action.payload.pic\n        }\n    }\n\n\n    return state\n}","import React, {useEffect, createContext, useReducer, useContext} from 'react';\nimport NavBar from './components/topbar'\nimport \"./App.css\"\nimport {BrowserRouter, Route, Switch, useHistory} from 'react-router-dom'\nimport Home from \"./components/screens/feed\"\nimport Profile from \"./components/screens/profile\"\nimport Signin from \"./components/screens/signin\"\nimport Signup from \"./components/screens/signup\"\nimport GuestFeed from \"./components/screens/guestfeed\"\n\nimport CreatePost from \"./components/screens/createpost\"\nimport {reducer, initialState} from './reducers/userReducer'\n\nexport const usercontext = createContext()\n\n\nconst Routing = () => {\n  const history = useHistory()\n  const {state, dispatch} = useContext(usercontext)\n  useEffect(()=>{\n\n    //Parse the user info into a json variable\n    const user = JSON.parse(localStorage.getItem(\"user\"))\n\n\n    //If the user exists...\n    if(user) {\n      //Lets react know you are logged in \n      dispatch({type:\"USER\", payload:user})\n      history.push(\"/feed\")\n    } else {\n      history.push(\"/signin\")\n    }\n  },[])\n\n\n  return (\n    <Switch>\n      <Route exact path=\"/feed\"><Home /></Route>\n      <Route exact path=\"/profile\"><Profile /></Route>\n      <Route exact path=\"/signin\"><Signin /></Route>\n      <Route exact path=\"/signup\"><Signup /></Route>\n      <Route exact path=\"/createpost\"><CreatePost /></Route>\n      <Route exact path=\"/guestfeed\"><GuestFeed /></Route>\n    </Switch>\n  )\n}\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n  return (\n    // \n    <usercontext.Provider value={{state, dispatch}}>\n      <BrowserRouter>\n        <NavBar />\n        <Routing />\n      </BrowserRouter>\n    </usercontext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n"],"sourceRoot":""}